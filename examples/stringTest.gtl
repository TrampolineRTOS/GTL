
%

let a := "Hello <World> !"
display a

let b := [a HTMLRepresentation]
display b

let b := [a identifierRepresentation]
display b

let b := ["stringTest.gtl" fileExists]
display b

let b := ["dummy" fileExists]
display b

let b := [a length]
display b

let b := [a lowercaseString]
display b

let b := [a uppercaseString]
display b

let b := [[a lowercaseString] capitalized]
display b

let b := [a leftSubString: 5]
display b

let b := [["Hello World !" leftSubString : 11] rightSubString: 5]
display b

let b := ["Hello World !" subString : 6, 5]
display b

let b := ["Hello" rightSubString : 10]
display b

let b := ["Hello" leftSubString : 10]
display b

let b := ["Hello" subString : 10, 3]
display b

let b := ["Hello" subString : 2, 10]
display b

let b := ["Hello World !" reversedString]
display b

let b := ["Hello World !" componentsSeparatedByString : " "]
display b

let b := ["Hello\nWorld" columnPrefixedBy : "# "]
println b

let b := ["Hello beautiful World.\nHow are you" wrap : 6, 2]
println b

let b := ["Hello beautiful World.\nHow are you" subStringExists : "beau"]
display b

let b := ["Hello beautiful World. How are you" replaceString : "Hello", "Goodbye"]
display b

if ["LOGNAME" envVarExists] then
  println "LOGNAME: " + ["LOGNAME" envVar]
else
  println "LOGNAME environment variable not found"
end if

if ["DUMMY" envVarExists] then
  println "DUMMY: " + ["DUMMY" envVar]
else
  println "DUMMY environment variable not found"
end if

println "DUMMY: " + ["DUMMY" envVar]

let aStr := "Hello World !"
[!aStr removeCharAtIndex : 1]
println aStr
[!aStr insertCharAtIndex : 'e', 1]
println aStr

let a := "     Hello world!     "
display a
let a := [a trimWhiteSpaces]
display a
